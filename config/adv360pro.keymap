#include <behaviors.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

/* Custom Device-tree */
// ==== MOUSE-KEY <section begins> ====
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 500
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 50

&mmv {
  acceleration-exponent = <1>;      // 1
  time-to-max-speed-ms = <0>;       // 40
  delay-ms = <0>;                   // 0
};

&msc {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <0>;       // 40
  delay-ms = <0>;                   // 10
};
// ==== MOUSE-KEY <section ends> =====

/ {
       behaviors {
        double_colon: double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings = <&kp COLON &kp COLON>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5  &tog 0                                                                                 &mo 1       &kp N6  &kp N7          &kp N8        &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W      &kp E     &kp R      &kp T   &kp ESCAPE                                                                             &kp ESCAPE  &kp Y   &kp U           &kp I         &kp O     &kp P     &kp BSLH
&kp LCTRL  &kp A      &kp S      &kp D     &kp F      &kp G   &kp ESCAPE            &kp LEFT_META  &kp LALT    &kp RIGHT_META  &mo 2                 &kp ESCAPE  &kp H   &kp J           &kp K         &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X      &kp C     &kp V      &kp B                                        &kp HOME    &kp PG_UP                                         &kp N   &kp M           &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &kp EQUAL  &kp LEFT  &kp RIGHT                      &kp BSPC  &kp DEL        &kp END     &kp PG_DN       &kp ENTER  &kp SPACE                      &kp DOWN_ARROW  &kp UP_ARROW  &kp LBKT  &kp RBKT  &mo 0
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                        &trans       &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                  &bootloader  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none               &none  &none    &bt BT_CLR  &none                        &none        &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                                    &none    &none                                                 &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                                    &none  &none  &none    &none       &bl BL_TOG  &rgb_ug RGB_TOG                      &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        SYMBOL {
            bindings = <
&kp EQUAL       &kp F1         &kp F2          &kp F3                &kp F4                 &kp F5     &kp F6                                                                       &kp F7        &kp F8              &kp F9             &kp F10             &kp F11               &kp F12  &kp F13
&none           &kp PIPE       &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &bl BL_INC                                                                   &kp C_VOL_UP  &mmv MOVE_X(-1000)  &mmv MOVE_Y(1000)  &mmv MOVE_Y(-1000)  &mmv MOVE_X(1000)     &none    &none
&kp LCTRL       &double_colon  &kp COMMA       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS   &bl BL_DEC         &none   &none     &none               &none               &kp C_VOL_DN  &mmv MOVE_X(-500)   &mmv MOVE_Y(500)   &mmv MOVE_Y(-500)   &mmv MOVE_X(500)      &none    &none
&kp LEFT_SHIFT  &none          &none           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL                             &none     &msc MOVE_Y(50)                                       &mmv MOVE_X(-250)   &mmv MOVE_Y(250)   &mmv MOVE_Y(-250)   &mmv MOVE_X(250)      &none    &kp RIGHT_SHIFT
&none           &none          &none           &kp LESS_THAN         &kp GREATER_THAN                             &none   &none   &none     &msc MOVE_Y(-50)    &mkp MB1   &mkp MB2                                   &none              &none               &none                 &none    &none
            >;
        };
    };
};
